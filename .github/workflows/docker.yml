name: Docker build and push

on:
  workflow_dispatch:

jobs:
  docker-image:
    name: Build Docker image and push to repositories
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        #with:
        #  token: ${{ secrets.TOKEN }}
      - name: Build image
        run: |
          docker build -t docker-webmin:latest -f- . <<EOF
          FROM debian:stable
          ARG DEBIAN_FRONTEND=noninteractive
          ARG DEBCONF_NOWARNINGS="yes"
          RUN echo root:pass | chpasswd && \
          apt-get update -yq && apt-get -yq install --no-install-recommends curl ca-certificates wget gnupg && wget http://www.webmin.com/jcameron-key.asc && apt-key add jcameron-key.asc && echo "deb http://download.webmin.com/download/repository sarge contrib" >> /etc/apt/sources.list && \
          echo "deb http://webmin.mirror.somersettechsolutions.co.uk/repository sarge contrib" >> /etc/apt/sources.list && \
          apt-get -yq update && \
          apt-get install -yq webmin && \
          apt-get clean
          
          ENV LC_ALL C.UTF-8

          EXPOSE 10000

          VOLUME ["/etc/webmin"]

          CMD /usr/bin/touch /var/webmin/miniserv.log && sed -i s/ssl=1/ssl=0/g /etc/webmin/miniserv.conf && /usr/sbin/service webmin restart && /usr/bin/tail -f /var/webmin/miniserv.log
          EOF
      #- name: Login to DockerHub
      #  uses: docker/login-action@v1
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}          
      - name: Push image
        run: |
          docker tag docker-webmin:latest ghcr.io/vhsec/docker-webmin:latest
          docker push ghcr.io/vhsec/docker-webmin:latest